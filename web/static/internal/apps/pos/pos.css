header {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  justify-content: space-between;
  width: 100%;
  height: 2.5em;
  margin-bottom: 1em;
  align-items: center;
  justify-items: center;
}

header > .left {
  justify-self: start;
}

header > .right {
  grid-column: 3;
  justify-self: end;
}

header button {
  margin: 0;
}

#logout[disabled] {
  display: none;
}

#error {
  color: var(--chez-red);
  text-align: center;
}

#terminal {
  align-items: stretch;
  display: grid;
  grid-template:
    "header" auto
    "face" minmax(0, 1fr)
    "error" auto
    "instructions" 30%
    "footer" 2em / 100%;

  padding: 10px;
  height: 100%;
}

.totals {
  display: inline-grid;
  grid-template:
    "s sd" auto
    "b bd" auto
    / auto auto;
  width: min-content;
  align-self: flex-end;
  column-gap: 1em;
  margin-top: 1em;
}

.totals > *:nth-child(even) {
  text-align: right;
}

/** PRICE CHECK **/
#content {
  margin: 0 auto;
  display: grid;
  border: 7px solid var(--bob-color);
  border-radius: 0 0 20px 20px;
  transition: all 200ms linear;
  aspect-ratio: unset;
  padding: 10px;
  width: 100%;
  overflow: hidden;
  --line-color: var(--bob-color);
  display: flex;

  flex-direction: column;
}

.glow,
#content[data-title]::before {
  box-shadow: 0.4389924193300864px 0 1px rgba(0, 30, 255, 0.5),
    -0.4389924193300864px 0 1px rgba(255, 0, 80, 0.3), 0 0 3px var(--line-color),
    inset 0.4389924193300864px 0 1px rgba(0, 30, 255, 0.5),
    inset -0.4389924193300864px 0 1px rgba(255, 0, 80, 0.3),
    inset 0 0 3px var(--line-color) !important;
}

/* Rows of price-check and purchase */
.price-row {
  display: flex;
  flex-wrap: nowrap;
}

.price-row > .price-name,
.price-row > .price-cost {
  width: max-content;
  white-space: nowrap;
}

.dots {
  flex: 0 1 auto;
  overflow: hidden;
  text-overflow: "";
}
.dots::after {
  content: "..................................................................................";
}

#hint {
  display: flex;
  flex-direction: column;
  width: max-content;
  justify-self: center;
}

/******
 FACE
******/

#face {
  display: flex;
  flex-direction: column;
  justify-self: stretch;
  align-self: stretch;
  min-height: 0;
  justify-content: center;
}

#content {
  --top-padding: 2em;
  overflow: scroll;
  padding: var(--top-padding) 1em 1em 1em;
}

/* Styling for the mouth with no data in it */
#content:not([data-title]) {
  flex-grow: 0;
  width: 260px;
  height: 150px;
  aspect-ratio: 1.75 / 1;
  border-radius: 10px 10px 50% 50% / 10px 10px 100% 100%;
  color: transparent;
  text-shadow: none;
}

/* style for the title on Bob's mouth */
#content::before {
  content: "";
  position: absolute;
  align-self: center;
  transform: translateY(calc(-1.5em - var(--top-padding)));
  display: inline-block;
  opacity: 0;

  /** Make it stretch out to appear */
  max-width: 0;
  transition: max-width 1s linear;

  padding: 0.25em 0.5em;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;

  background: var(--chez-bg);
  color: var(--bob-color);
  border-radius: 7px;
  --line-color: var(--bob-color);
}

#content[data-title]::before {
  opacity: 1;
  content: attr(data-title);
  border: 7px solid var(--bob-color);
  max-width: 100%;
}

#title {
  min-width: 4em;
  margin-bottom: 80px;
  line-height: normal;
  text-align: center;
  color: var(--bob-color);
  display: flex;
  flex-direction: column;
  overflow-y: hidden;
  font-size: 48px;
}

/************
 * FONT NOTES
 ************
 * By default (going by the #screen font-family orders in terminal.css), the
 * initial eye characters (U+2B24 -- corresponding to the circles) are of the
 * family "FreeMono". These circle characters (U+2B24) are not supported in the
 * first-choice family ("Press Start 2P"), so the next best option is FreeMono.
 *
 * In order to make sure that a poked eye has the same width as an unpoked
 * eye, we force both eyes to first try to use the FreeMono font family. If we
 * don't do this, then if we poke an eye it could change to a different font
 * family based on what character we use to represent a poked eye and which font
 * families support it. Since different font families use different character
 * sizes, this would make the eye-poking look janky -- e.g. poking the left
 * eye could lead to the new left eye character being slightly thinner or wider
 * than the default eye character, which would adjust the position of the right
 * eye.
 *
 * Since "FreeMono" supports the default eye circle character (U+2B24), setting
 * it as our "first choice" font family here fixes the problem -- so long as
 * the poked-eye character is also supported by this font family. (This is why
 * we changed the "X" character from U+2718 to just "X", since FreeMono doesn't
 * support U+2718. The backup font family used for U+2718 had the same
 * width on my laptop but a slightly different width on the kiosk, resulting
 * in poking looking janky on the kiosk. If you're still reading this comment
 * like three paragraphs in, I am so sorry.)
 *
 * FreeMono is part of the GNU FreeFont package, I think, and GNU FreeFont is
 * packaged with all modern (?) Ubuntu versions -- so FreeMono should always be
 * available on the kiosk, provided we don't decide to like port over the kiosk
 * system to Windows or something. In the event that FreeMono isn't available,
 * we'll just default to whatever monospace font is available -- this might
 * make poking look janky again if the monospace font doesn't support U+2B24 or
 * has differently-sized characters for some reason, but this problem probably
 * won't ever come up.
 *
 * ^^^ Yeah, all of that text was with regards to the single line setting the
 * font-family of this div. CSS is hard :(
 *
 ****************
 * BLINKING NOTES
 ****************
 * The animation-duration is actually half of the total
 * amount of time taken between blinks.
 *
 * - When you refresh the POS page, there will be DURATION seconds until the
 *   first blink.
 * - Then there will be another DURATION seconds, which is begun by
 *   the eyes "un-blinking" (returning to normal). This is due, I think, to the
 *   animation-direction being set to "alternate".
 * - Then there will be another DURATION seconds, at the end of which the eyes
 *   blink.
 *
 * So the animation-duration being 30 seconds implies that each state (about to
 * blink, or recovering from un-blinking) takes 30 seconds -- but the total
 * time between consecutive blinks is ~60 seconds.
 */
#eyes {
  font-family: "FreeMono", monospace;
  text-align: center;
  color: var(--bob-color);
  transition: color 200ms linear;
  font-size: 96px;
  min-width: 4em;
  margin-bottom: 80px;
  transform-origin: 50% 75%;
  animation-name: blinkeyes;
  animation-duration: 30s;
  animation-direction: alternate;
  animation-iteration-count: infinite;
}

.rainbow {
  animation-name: rainbowanim;
  animation-duration: 20s;
  animation-direction: normal;
  animation-iteration-count: infinite;
}

#content.rainbow::before {
  /* Apply the rainbow animation to the title on the mouth (#content::before).
   * Ideally, we'd just add the .rainbow class to #content::before, but we
   * can't add classes to "pseudoelements" like ::before. As a hacky workaround
   * we can just add everything in .rainbow to #content::before when #content
   * has the .rainbow class. (there is probs a more elegant way to do this tho)
   */
  animation-name: rainbowanim;
  animation-duration: 20s;
  animation-direction: normal;
  animation-iteration-count: infinite;
}

@keyframes rainbowanim {
    /* "color" is for the eyes; "border-color" is for the mouth;
     * "--line-color" is for the box shadow glow on the mouth.
     */
	from {
        color: var(--chez-blue);
        border-color: var(--chez-blue);
        --line-color: var(--chez-blue);
	}
	20% {
        color: var(--chez-purple);
        border-color: var(--chez-purple);
        --line-color: var(--chez-purple);
	}
	40% {
        color: var(--chez-red);
        border-color: var(--chez-red);
        --line-color: var(--chez-red);
	}
	60% {
        color: var(--chez-yellow);
        border-color: var(--chez-yellow);
        --line-color: var(--chez-yellow);
	}
	80% {
        color: var(--chez-green);
        border-color: var(--chez-green);
        --line-color: var(--chez-green);
	}
	to {
        color: var(--chez-blue);
        border-color: var(--chez-blue);
        --line-color: var(--chez-blue);
	}
}

@keyframes blinkeyes {
	from {
		transform: scaleY(1.0);
	}
	99% {
		transform: scaleY(1.0);
	}
	to {
		transform: scaleY(0.1);
	}
}

/* An annoying thing about the default eye circle character (U+2B24) is that
 * it is slightly vertically higher up than an "X" character, even when located
 * in the same <div>. (At least this is the case for the FreeMono font family.)
 * If, like me, you are an insane person who cares about this for some reason,
 * the problem can be fixed by adding negative space to the top of poked eye
 * characters: this hack is from https://stackoverflow.com/a/7612378. (I played
 * around with negative space values and found that -2px looked best here.)
 * Thankfully -- as far as I can tell, this doesn't impact the layout of the
 * rest of the POS interface, regardless of if 0, 1, or 2 eyes are poked.
 */
.pokedeye {
  position: relative;
  top: -2px;
}

.eye:first-child {
  margin-right: 0.5em;
}

.header-value {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
}

.header-value::after {
  content: attr(data-value);
}

#balance.positive::after {
  color: var(--chez-green);
}

#balance.negative::after {
  color: var(--chez-red);
}

#user::after {
  color: var(--bob-color);
}

h1 {
  color: var(--bob-color);
  font-size: inherit;
  margin-top: 2em;
}
section {
  margin-top: 1em;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  padding-left: 1em;
}
